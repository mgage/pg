##DESCRIPTION

# TEST from the tikz from a pg problem

##ENDDESCRIPTION


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGinfo.pl",
   "PGML.pl",
   #"source.pl",         # used to display problem source button
   "PGcourse.pl",      # Customization file for the course
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$debug=0;
##############################################################
#
#  Setup
#
#


#$working_dir = "$envir{templateDirectory}tikz_build";
#$file_name    = "image3";
$destination_path = "$envir{templateDirectory}set$setNumber/$file_name";
$ext = 'svg';
# this destination_path is still a little fragile.

# if ($debug) {
# TEXT(file_name=$file_name, $BR,
# 	destination_path=$destination_path",$BR,$BR
# );
#
# TEXT("Create tikz_graph $PAR");
# }
# 
# sub tikz_test {
# 	my $test_tikz = TikZ_Image2->new(~~%envir);
# 	$test_tikz->{working_dir}= $PG->tempDirectory();
# 	$test_tikz->addTex("");
# 	warn "run tikz test";
# 	my $result = $test_tikz->create_working_directory();
# 	warn "end run tikz test";
# 	unless ($result) {
# 		TEXT(  "tikz test ", $BR);
# 		TEXT( $test_tikz->get_errors, $BR  );
# 		TEXT("done test", $BR);
# 	} 
# 	else {
# 		TEXT("tex_file_path for test", $test_tikz->{tex_file_path})
# 	}
# 	TEXT("parent directory", $test_tikz->{working_dir}, $BR);
# 	return $result;
# }
# 
# $tikz_out = tikz_test();
# TEXT( "temp directory",$PG->tempDirectory,$BR );
# TEXT( "tikz_out code ", $tikz_out, $BR  );
# TEXT("done tikz_test ", $BR);

#warn "begin tikz_graph";
( $pdflatex_command, $copy_command, $convert_command, $displayMode);
sub tikz_graph{
	my $drawing = TikZ_Image2->new(~~%envir);
	# initialize
		$drawing->{working_dir} = $PG->tempDirectory();
		my $result = $drawing->create_working_directory();
		#warn "end tikz_graph rendering";
		unless ($result) {
			warn "unable to create working directory";
		}
		if ($drawing->get_errors() ){
		
			warn "Errors in TikZ code";
			warning $drawing->get_errors;
		}
		else {
			# TEXT("tex_file_path", $drawing->{tex_file_path});
		}
		#$drawing->{file_name}=$file_name; not needed -- included in destination_path
		$drawing->{destination_path}= $destination_path;
        $drawing->ext($ext); # or gif or svg or pdf
		#$drawing->set_commandline_mode("wwtest"); # "wwtest" or "macbook" or "hosted2"
	# end initialize
	# debugging /development
	$copy_command = $drawing->{copy_command};
	$pdflatex_command =$drawing->{pdflatex_command};
	$convert_command = $drawing->{convert_command};
    $display_mode = $drawing->{displayMode};
	# end debugging
	$drawing->addTex(shift);
	unless( $drawing->render()) {
		if ($drawing->get_errors() ){
		
			warn "From .pg file-- errors in TikZ code ~~n";
			warn $drawing->get_errors(), "~~n";
		}
		else {
			warn "Something went wrong with the rendering";
		}
		return undef;
	};
	return $drawing->{final_destination_path};
}



#warn "enter tikz_graph data";
$path = tikz_graph("
\begin{tikzpicture}[main_node/.style={circle,fill=blue!20,draw,minimum size=1em,inner sep=3pt]}] 
\node[main_node] (1) at (0,0) {1}; 
\node[main_node] (2) at (-1, -1.5)  {2};
\node[main_node] (3) at (1, -1.5) {3}; 
\draw (1) -- (2) -- (3) -- (1); 
\end{tikzpicture}
\begin{tikzpicture}[main_node/.style={circle,fill=blue!20,draw,minimum size=1em,inner sep=3pt]}]
\draw  (-4,0) -- (4,0);
\draw (0,-2) -- (0,2);
\draw (0,0) circle (1.5);
\draw (0, 1.5) node[anchor=south]{N} -- (2.5,0)node [above]{y};
\draw (1.2,0.9) node[right]{\( ( x, x_n)\)};
\end{tikzpicture}
"
);


Context("Numeric");

##############################################################
#
#  Text
#
#


Context()->texStrings;
if ($debug) {
BEGIN_PGML
	Print hi   
	working_dir =[$working_dir]     
	file_name = [$file_name]   
    destination_path = [$destination_path]      
	path = [$path.png]    
	alias = [@ alias("$path") @]*         
	More stuff
	pdflatex = [$pdflatex_command]      
	convert [$convert_command]      
	copy    [$copy_command]      
 end this
END_PGML
}

if ($path and ($ext eq "png" or $ext eq "gif") ) {
	TEXT("new tikz_image $ext = ",image("$path", width=>227, height=>114));
}
elsif ($path and $ext eq svg){
	TEXT("new tikz_image $ext = ", embedSVG($path), $BR,$BR);
	TEXT("stored_tikz_image $ext (better)", embedSVG("potato2better.svg"), $BR, $BR);
	TEXT("stored_tikz_image $ext (2a)", embedSVG("potato2a.svg"));
}

Context()->normalStrings;

#tempDirectory	=>	 /Volumes/WW_test/opt/webwork/webwork2/htdocs/tmp/daemon_course/
# tempURL	=>	 /webwork2_files/tmp/daemon_course/
# templateDirectory	=>	 /Volumes/WW_test/opt/webwork/courses/daemon_course/templates/

#externalLaTeXPath	=>	 /Volumes/WW_test/opt/local/texlive/2010/bin/x86_64-darwin/latex
#externalDvipngPath	=>	 /Volumes/WW_test/opt/local/texlive/2010/bin/x86_64-darwin/dvipng
# externalcp	=>	 /bin/cp
# externalPdflatexPath	=>	 /Volumes/WW_test/opt/local/texlive/2010/bin/x86_64-darwin/pdflatex --shell-escape
# externalConvert	=>	 
##############################################################
#
#  Answers
#
#



ENDDOCUMENT();        # This should be the last executable line in the problem.